Здесь описаны модули сервиса и их связи

    Пакет core

Данный пакет (package) используется для хранения модулей с базовой логикой с использованием баховых зависимостей Python:

    1. config.py: конфигурационный моодуль. Работает с ENV переменными окружениями для настройки конфигурации запуска проекта, используя модуль os. Формирует настройку подключения к базе данных и т.д.
    2. utils.py: модуль для базовых вычислительных функций в проекте. Описана функция lifespan для описания логики запуска проекта и его завершения. Использует модуль repository.py из пакета db для функции init_db, которая создаёт таблицы при запуске приложения, session.py из пакета db и config.py из пакета core для получения application_environment, для проверки режима запуска проекта, отключения от базы данных и удаления файла базы данных sqlite, если приложение запущено в тестовом режиме.

Также я обычно использую данный пакет для модуля enums.py, в котором инициализированы классы Enum, которые используются для создания объектов, которые должны иметь только одно значение из определённого списка, для валидации.

    Пакет db

Данный пакет используется для модулей, работающих с базой данных, которая используется в API:

    1. session.py: модуль, в котором создаётся объект для подключения к базе данных (engine) и класс для создания сессий для взаимодействия с базой данных (SessionDep). Использует модуль config.py из пакета core для получения конфигурации для подключения к базе данных.
    2. models.py: модуль, в котором инициализированы классы моделей (таблиц) в базе данных, через которые происходит взаимодействие с данными (создание, чтение, изменение, удаление) в таблицах.
    3. repository.py: модуль, в котором описаны основные функции больших транзакций для взаимодействия с базой данных. Использует модуль session.py для получения (или аннотирования) объекта сессии, через который подключается к базе данных, модуль models.py для получения и создания объектов моделей(таблиц), для выполнения запросов в таблицы.

    Пакет endpoints

Данный пакет используется для модулей, в которых инициализированы функции эндпоинтов API и описана логика запросов и ответов для взаимодействия с клиентом:
    1. appointments.py: модуль, в котором описаны эндпоинты для взаимодействия клиента с записями на прием ко врачу. Использует модули session.py и models.py из пакета db для небольших и легких запросов в базу данных внутри функций эндпоинтов, а также repository.py из пакета db для больших транзакций в базу данных. appointments.py и doctors.py из пакета schemas для получения Pydantic моделей, по которым валидируются запросы и ответы.
    2. doctors.py: также, как и appointments.py, описывает эндпоинты для работы с записями докторов в базе данных в таблице doctors. По такой же причине использует session.py, models.py и repository.py. И также использует doctors.py из пакета schemas для Pydantic моделей, валидирующих запросы и ответы.

    Пакет schemas

Данный пакет используется для модулей, в которых инициализированы Pydantic модели, которые используются для валидации всех запросов и ответов всех эндпоинтов API:
    1. appointments.py: модуль для моделей записи ко врачу.
    2. doctors.py: модуль для моделей докторов.

    Пакет app

Данный пакет является основным пакетом всего проекта FastAPI, хранит все вышеописанные пакеты и основной исполнительный модуль main.py, с которого проект и запускается:

    1. main.py: модуль, инициализирующий объект app класса FastAPI, который запускает HTTP сервер uvicorn, обслуживает, выполняет при запросе и декорирует все функции, являющиеся эндпоинтами, или для подключения роутеров, которые отдельно в своих модулях декорируют функции эндпоинты. Использует модули appointments.py и doctors.py из пакета endpoints для подключения роутеров.
